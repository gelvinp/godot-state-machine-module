<?xml version="1.0" encoding="UTF-8" ?>
<class name="State" inherits="Node" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		An object representing one discrete behavior.
	</brief_description>
	<description>
		A state object, contains behaviors when entering and leaving the state, as well as during (physics/)process, and unhandled input.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="enter">
			<return type="void" />
			<param index="0" name="message" type="Dictionary" default="{}" />
			<description>
				Do any prep work needed when entering the state, with an optional message.
			</description>
		</method>
		<method name="exit">
			<return type="void" />
			<param index="0" name="leaving_for" type="String" />
			<description>
				Do any cleanup needed when leaving the state, given the name of the next state.
			</description>
		</method>
		<method name="handle_input">
			<return type="void" />
			<param index="0" name="event" type="InputEvent" />
			<description>
				Handle an input.
			</description>
		</method>
		<method name="physics_process">
			<return type="void" />
			<param index="0" name="delta" type="float" />
			<description>
				Handle the physics_process step of the main loop.
			</description>
		</method>
		<method name="process">
			<return type="void" />
			<param index="0" name="delta" type="float" />
			<description>
				Handle the process step of the main loop.
			</description>
		</method>
	</methods>
	<members>
		<member name="state_machine" type="StateMachine" setter="set_state_machine" getter="get_state_machine">
			The [StateMachine] that owns this State.
		</member>
	</members>
</class>
